<?php

namespace ExploitBundle\Controller;

use ExploitBundle\Resources\config\Connexion;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method;
use PhpOffice\PhpSpreadsheet\Spreadsheet;
use ExploitBundle\Entity\Post;
use Symfony\Component\HttpFoundation\File\File;
use Symfony\Component\HttpFoundation\Response;
use ExploitBundle\Classes\Functionsverif;
use Symfony\Component\HttpFoundation\Session\Session;


class PreparationController extends Controller
{
    /**
     * @Route("prepa", name="PreparInteg")
     */
    public function IndexAction()
    {


        return $this->render('@Exploit/Preparation/index.html.twig', array(// ...
        ));
    }


    /**
     * @param $filename
     * @return Response
     * @throws \Exception
     * @Route("integration/{id}/{filename}", name="integ_csv")
     */
    public function conversionCsvAction($id, $filename)
    {
        $session = new Session();


        $filePathCsv = realpath(dirname(__FILE__) . '/../../../web/uploads/fileCsv/' . $filename . '.csv');

        if($filePathCsv){

            $em = $this->getDoctrine()->getManager();
            $statut = $em->getRepository("ExploitBundle:Post")->findStatut($id, 2);



            if($statut) throw new \Exception("Ce  fichier est Déja intégré");

            $csv = array_map('str_getcsv', file($filePathCsv));
            array_walk($csv, function (&$a) use ($csv) {
//                dump($a);die;
                $a = array_combine($csv[0], $a);//
            });
            array_shift($csv); # remove column header
            $action =  $this->traitementAction($csv, $filename);

            $em->getRepository("ExploitBundle:Post")->updateStatut($id, 2); // update statut


        }else{
            throw new \Exception('Fichier introuvable');
        }
        $session->getFlashBag()->add('info', 'Vérification des numérique OK');
        return $this->render('preparation/index.html.twig', array(
            'errors_all' => $action, 'id' => $id
        ));
    }

    public function traitementAction($csv, $path)
    {
        $func = new Functionsverif();

        $cont = $csv[0];
        $line = array();
        $lineinsert = array();
        $errors = array();
        $erreurs = array();
        $cont = count($csv[0]);

        for ($i = 0; $i < 1; $i++) {
            for ($x = 1; $x < $cont; $x++) {
                if ($csv[$i][2] != null) {
                    $line[] = $csv[$i][$x];
                }
            }
            $line[] = "SEQUENCE";
            $entete = " (" . implode(", ", $line) . ")"; // les entete pour SQL
        }
        // compteur de ligne d'intègration
        $compteur = 0;

        // boucle commence à la ligne 6 du Tableau

        for ($i = 4; $i < count($csv); $i++) {
            $lineinsert = array();
            // verifier si la colonne 2 n'est pas vide
            if ($csv[$i][1] != null)
            {

                for ($x = 1; $x < $cont; $x++) {

                // return un tableau si erreur dans le lenth
                    $data = $func->verif_lenth($x, $csv[$i][$x]);
                    if (is_array($data)) {
                        $lineinsert[] = $data['data'];
                        $errors[] = 'Sur la ligne ' . $i . ' ' . $data['errors'];
                    } else {
                        $lineinsert[] = $data;
                    }
                }
                // verifier le numérique sur les colonnes
                    $verif = $func->verifIntString($lineinsert, $i);

                // transforme les string/nombre/date
                    $ligne = $func->numericToString($lineinsert);

//                // clé du fichier 12 lettres

                $sequence_nomfile = str_split($path, 12);
                $sequence =$sequence_nomfile[0];


                    $ligne[] = "'$sequence'";

                // formater la ligne
                    $lineinsert1 = implode(',', $ligne);
                    //echo '<pre>'; print_r($lineinsert); echo '</pre>';

                if($verif == null ){

                    $sql = "INSERT INTO wt_produit_integrer_v1 ";
                    $sql .= $entete;
                    $sql .= " VALUES (" . $lineinsert1 . ") ";
                    //echo $sql;



                        $connex = new Connexion();
                        $con = $connex->controle_file_gce();
                        $req_gce = oci_parse($con, $sql);

                        if ($req_gce == false) {
//                            dump($sql);
                        } else {

                             oci_execute($req_gce);
                            }
                }else{
                    $erreurs[] = $verif;
                  };

            }

        }
        $errors_ =['erreur' => $erreurs , 'errors'=> $errors, 'sequence' => $sequence];

        return $errors_;
    }

}
