<?php

namespace ExploitBundle\Controller;

use PhpImap\Mailbox;
use PhpOffice\PhpSpreadsheet\Calculation\DateTime;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use ExploitBundle\Resources\config\Connexion;
use Ob\HighchartsBundle\Highcharts\Highchart;
use SecIT\ImapBundle\Service;
use ExploitBundle\Controller\EditiqueController as edi;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Security;

class GceconsultController extends Controller
{
    /**
     * @Route("consult", name="GceConsultIndex")
     * @Security("has_role('ROLE_ADMIN')")
     */
    public function indexAction()
    {

        $connex = new Connexion();
        $con =  $connex->controle_file_gce();

        /* Requte pour les etat procédure*/
        $req_gce = oci_parse($con, "select * from wv_exploit_procedure");
        oci_execute($req_gce);
        $result_req_gce = oci_fetch_all($req_gce, $res, null, null, OCI_FETCHSTATEMENT_BY_ROW);


        /* Requte pour les fil bloquée*/
        $req_gce_fil =oci_parse($con, "select * from SOC2.wv_ctrl_fil$");
        oci_execute($req_gce_fil);
        $result_req_gce_fil = oci_fetch_all($req_gce_fil, $res_fil, null, null, OCI_FETCHSTATEMENT_BY_ROW);


        /* Connexion a la BDD local */
        /* Affichage Etat des Serveurs */
        $conn = $this->get('database_connection');
        $test = $conn->fetchAll('SELECT * FROM serveurs');

        $out= array();
        $sor=array();
        $sor_per=array();
        for ($i = 0; $i < 5; $i++) {
            $serveur =$test[$i]['nomServeur'];  // récuperer le nom du serveur
            $select_ip = $test[$i]['ip'];       // récuperer l'IP
            $ping =   exec('ping -c1 '.$select_ip, $output, $return_var);  // retour le ping du serveur
            $serv = $serveur;
            $ip = $select_ip;

            if ($return_var == 0){
                $sor[] = array( "adresse" => $ip, "serveur" => $serv, );
            }else{
                $sor_per[] = array( "adresse" => $ip, "serveur" => $serv, );
            }
        }

        // commande par mail

        $UTC = new \DateTimeZone("UTC");
        $newTZ = new \DateTimeZone("Europe/Paris");
        $req_gce = oci_parse($con, "select * from wv_strv_cde");
        oci_execute($req_gce);
        $rep = oci_fetch_array($req_gce);

        $gce_date = new \DateTime($rep[0]);
        $gce_jour = $gce_date->format('d-m-Y');
        $gce_heure = $gce_date->format('H:i');
        $today = date('d F Y');
        $critere_date = 'ON "' . $today . '"';

        $mailbox = imap_open("{outlook.office365.com:993/imap/ssl/novalidate-cert}Commandes","commande_animalis@animalis.fr","Migr2015", OP_READONLY);
        $recup_last_mail =  imap_search($mailbox,$critere_date);
        $nb_ligne = count($recup_last_mail);
        $id_last_mail = $recup_last_mail[$nb_ligne - 1];
        $recup_last_mail = imap_fetch_overview($mailbox,$id_last_mail);

		// dump(new \DateTime($recup_last_mail[0]->date, $UTC));die;
		
        $mail_date_complet = new \DateTime($recup_last_mail[0]->date, $UTC);
	//	$mail_date_complet = new \DateTime();
        $mail_date_complet->setTimezone($newTZ);
        $mail_date = $mail_date_complet->format('d-m-Y');
        $mail_heure = $mail_date_complet->format('H:i');

        $ecart = $gce_date->diff($mail_date_complet);
        $ecart_format = $ecart->format('%R%Hh%Imin');
        if ($ecart_format == '+00h00min' || preg_match('#\+#',$ecart_format)) {//si il n'y pas d'écart ou si mail>GCE, on envoi pas de mail
            $sendmail = 0;
            //echo $log." - RAS<br/>";
        } else {
            $sendmail = 1;
        }

        // fin

        $rendu_editique = new edi();
        $error = $rendu_editique->ediAction();
        $error_edi = $error["compteur_erreur"];
        $failed_edi = $error["compteur_failed"];

        return $this->render('@Exploit/Gceconsult/index.html.twig', array(
            'res' => $res , 'res_fil' => $res_fil,"etat"=> $sor , "perte_paq" => $sor_per,
            'date_mail' => $mail_date,
            'mail_heure'=>$mail_heure,
            'date_gce' => $gce_date,
            'gce_jour' => $gce_jour,
            'gce_heure' => $gce_heure,
            'ecart_format' => $ecart_format,
            'sendmail' => $sendmail,
            'error_edi' => $error_edi,
            'failed_edi' => $failed_edi
        ));

    }

    /**
     * @Route("consult/info", name="GceDbInfo")
     * @return \Symfony\Component\HttpFoundation\Response
     * @Security("has_role('ROLE_ADMIN')")
     */

    public function gcedbinfo()
    {
        $connex = new Connexion();
        $con =  $connex->controle_gce_sys();
        $req_gce = oci_parse($con, "select a.tablespace_name,
       a.bytes_alloc/(1024*1024) as TOTAL_ALLOC,
       a.physical_bytes/(1024*1024) as TOTAL_PHYS_ALLOC,
       nvl(b.tot_used,0)/(1024*1024) as USED,
       (nvl(b.tot_used,0)/a.bytes_alloc)*100 as PO_USED
        from ( select tablespace_name,
               sum(bytes) physical_bytes,
               sum(decode(autoextensible,'NO',bytes,'YES',maxbytes)) bytes_alloc
               from dba_data_files
               group by tablespace_name ) a,
             ( select tablespace_name, sum(bytes) tot_used
               from dba_segments
               group by tablespace_name ) b
        where a.tablespace_name = b.tablespace_name (+)
        --and   (nvl(b.tot_used,0)/a.bytes_alloc)*100 > 10
        and   a.tablespace_name not in (select distinct tablespace_name from dba_temp_files)
        and   a.tablespace_name not like 'UNDO%'
        order by 1
       ");
        oci_execute($req_gce);
        $result_req_gce = oci_fetch_all($req_gce, $rep, 0, -1, OCI_FETCHSTATEMENT_BY_ROW);

        /* $used = json_encode($rep,JSON_NUMERIC_CHECK); */

        $count = 6;
        $tab = array();
        $tab1 = array();
        for ($i = 0; $i < $count; $i++) {
            $var = (float)$rep[$i]['PO_USED'];
            $tab[] = $rep[$i]['TABLESPACE_NAME'] ;
            $tab1[] = round($var, 2) ;
        }

        /*     $tab = array();
             foreach ( $rep as $resultat){
                 $tab[] =  $resultat;
             }*/
        $porrc_used = json_encode($tab1, JSON_NUMERIC_CHECK);



        /*   var_dump($tab1, $porrc_used);
            echo $porrc_used;
                die();*/

        $series = array(
            array(
                "name" => 'DATA',
                "data" => $tab1,
                "type" => "column"
            ),
        );

        $base = $tab;

        $ob = new Highchart();

        $ob->chart->renderTo('barchart');
        $ob->title->text('TABLESPACE');
        $ob->chart->type('column');
        $ob->yAxis->title(array('text' => "Pourcentage (%)"));
        $ob->xAxis->title(array('text' => "BDD"));
        $ob->xAxis->categories($base);
        $ob->series($series);

        return $this->render('@Exploit/Gceconsult/gcedbinfo.html.twig', array(
            'barchart' => $ob
        ));

        oci_free_statement($req_gce);
    }

    /**
     * @Route("consult/mail", name="ControleMail")
     */
    public function mailcontroleAction()
    {
        $connex = new Connexion();
        $con =  $connex->controle_file_gce();
        $UTC = new \DateTime("UTC");
        $newTZ = new \DateTime("Europe/Paris");

        $req_gce = oci_parse($con, "select * from wv_strv_cde");
        oci_execute($req_gce);
        $rep = oci_fetch_array($req_gce);

        $gce_date = new \DateTime($rep[0]);
        $gce_jour = $gce_date->format('d-m-Y');
        $gce_heure = $gce_date->format('H:i');
        $today = date('d F Y');
        $critere_date = 'ON "' . $today . '"';

        $mailbox = imap_open("{outlook.office365.com:993/imap/ssl/novalidate-cert}Commandes","commande_animalis@animalis.fr","Migr2015", OP_READONLY);
        $today = date('d F Y');
        $critere_date = 'ON "' . $today . '"';
        $recup_last_mail =  imap_search($mailbox,$critere_date);
        $nb_ligne = count($recup_last_mail);
        $id_last_mail = $recup_last_mail[$nb_ligne - 1];
        $recup_last_mail = imap_fetch_overview($mailbox,$id_last_mail);

        $mail_date_complet = new \DateTime($recup_last_mail[0]->date);

        $mail_date = $mail_date_complet->format('d-m-Y');
        $mail_heure = $mail_date_complet->format('H:i');
        $ecart = $gce_date->diff($mail_date_complet);
        $ecart_format = $ecart->format('%R%H h %I min');



        return $this->render('@Exploit/Gceconsult/mailControle.hml.twig', array(
            'date_mail' => $mail_date,
            'mail_heure'=>$mail_heure,
            'date_gce' => $gce_date,
            'gce_jour' => $gce_jour,
            'gce_heure' => $gce_heure,
            'ecart_format' => $ecart_format

        ));

    }

}
